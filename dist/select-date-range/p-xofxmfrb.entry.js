import{h as e,r as t}from"./p-39786f07.js";const a=e=>`${e.getFullYear()}-${e.getMonth()+1}-${e.getDate()}`,n=e=>e.split("-").map(e=>parseInt(e)),s=e=>{const[t,a,s]=n(e),r=new Date;return r.setFullYear(t),r.setMonth(a-1),r.setDate(s),r},r=e=>{const t=new Date(e);return t.setDate(t.getDate()+1),t},i=(e,t)=>{let a=s(e),n=s(t);return[a,n=r(n)]},c=(e,t)=>e.getDate()===t.getDate()&&e.getUTCMonth()===t.getUTCMonth()&&e.getFullYear()===t.getFullYear(),h=(e,t)=>{const[a,s,r]=n(e),[i,c,h]=n(t[0]),[d,l,b]=n(t[1]);return!(r<h||r>b||s<c||s>l||a<i||a>d)},d=[{name:"Sunday",abbr:"Sun",isWeekend:!0},{name:"Monday",abbr:"Mon "},{name:"Tuesday",abbr:"Tue"},{name:"Wednesday",abbr:"Wed"},{name:"Thursday",abbr:"Thu"},{name:"Friday",abbr:"Fri"},{name:"Saturday",abbr:"Sat",isWeekend:!0}],l=[{name:"January",abbr:"Jan"},{name:"February",abbr:"Feb"},{name:"March",abbr:"Mar"},{name:"April",abbr:"Apr"},{name:"May",abbr:"May"},{name:"June",abbr:"Jun"},{name:"July",abbr:"Jul"},{name:"August",abbr:"Aug"},{name:"September",abbr:"Sep"},{name:"October",abbr:"Oct"},{name:"November",abbr:"Nov"},{name:"December",abbr:"Dec"}],[b,o]=(()=>{const e=new Date,t=new Date(e.getFullYear(),e.getMonth(),1),n=new Date(e.getFullYear(),e.getMonth()+1,0);return[a(t),a(n)]})(),u={selectMode:"single",checkedDates:"",viewRangeStart:b,viewRangeEnd:o},g=t=>e("time",{dateTime:t.dateString()},e("label",null,t.day,e("input",{onChange:e=>(e=>{e.target.checked&&t.select()})(e),checked:t.checked,type:"checkbox",value:t.dateString()}))),m=t=>e("section",{class:"month"},e("header",null,l[t[0].month-1].name),(e=>{let t=[],a=[];return e.forEach(e=>{6===e.dayOfWeek?(t.push(e),a.push(t),t=[]):t.push(e)}),t.length&&a.push(t),a})(t).map((t,a)=>((t,a=!1)=>e("section",{class:"week"},a&&((t=d)=>e("header",null,t.map(({name:t,abbr:a,isWeekend:n})=>e("abbr",{class:n&&"weekend",title:t},a))))(),t.map(g)))(t,0===a))),p=e=>({dateObject:()=>(void 0).stringToDate(e),dateString:()=>e,select(){this.checked=!0},bindEvent(e,t){this.events[e]=t}}),D=(e,t)=>{const[a,s,r]=n(e),i=Object.create(Object.assign({events:{}},(e=>Object.assign({checked:!1,disabled:!1},e))(t),p(e))),c=new Date(e).getDay();return Object.assign(i,{year:a,month:s,day:r,dayOfWeek:c})};class k{constructor(e){t(this,e),this.viewList=[],this.config=u,this.checked={}}parseCheckedDates(e){"string"==typeof e&&(e=JSON.parse(e)),e.forEach(e=>this.checked[e]=!0)}componentWillLoad(){this.parseCheckedDates(this.checkedDates),this.updateConfig()}isCheckedDate(e){if("range"===this.config.selectMode){let t=Object.keys(this.checked);return h(e,t)}return e in this.checked}dispatchOnSelect(e,t,a){if("onSelect"in e.events)return e.events.onSelect(t,a)}bindOnSelect(e){this.onDateSelect&&e.bindEvent("onSelect",this.onDateSelect)}createDate(e){const t=a(e),n=D(t);return this.bindOnSelect(n),this.isCheckedDate(t)&&!1!==this.dispatchOnSelect(n,t,e)&&n.select(),n}updateViewList(e=this.config){let t=null,a=[];this.viewList=[];let[n,s]=i(e.viewRangeStart,e.viewRangeEnd);for(;!c(n,s);){const e=this.createDate(n);null!==t&&t!==e.month?(this.viewList.push(a),a=[]):(a.push(e),n=r(n)),t=e.month}return this.viewList.push(a),Object.create({render:()=>this.viewList.map(m)})}updateConfig(e){if(e)Object.assign(this.config,e);else{const{viewRangeStart:e,viewRangeEnd:t,checkedDates:a,selectMode:n}=this;e&&(this.config.viewRangeStart=e),t&&(this.config.viewRangeEnd=t),a&&(this.config.checkedDates=a),this.selectMode&&(this.config.selectMode=n)}}render(){return this.updateViewList().render()}static get watchers(){return{checkedDates:["parseCheckedDates"]}}static get style(){return".month{border:1px double;margin-bottom:2px}"}}export{k as select_date_range};